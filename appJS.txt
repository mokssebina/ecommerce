import { Provider } from 'react-redux'
import { store } from '../app/store'
import '../styles/globals.css'
import NProgress from "nprogress";
import Router from "next/router";
import Head from "next/head";
import { ChakraProvider } from '@chakra-ui/react'
import { Provider as AuthProvider } from 'next-auth/client';
import PageLayout from '../components/PageLayout';
import { AuthContextProvider } from '../context/AuthContext';
//import { SessionProvider } from "next-auth/react"
import { ThemeProvider } from '@mui/material/styles';
import CssBaseline from '@mui/material/CssBaseline';
import { CacheProvider } from '@emotion/react';
import theme from '../config/theme';
import createEmotionCache from '../config/createEmotionCache';

// Client-side cache, shared for the whole session of the user in the browser.
const clientSideEmotionCache = createEmotionCache();

const MyApp = ({ Component, emotionCache = clientSideEmotionCache, pageProps}) => {
/*
  NProgress.configure({ showSpinner: false });

  Router.events.on("routeChangeStart", () => {
    NProgress.start();
  });

  Router.events.on("routeChangeComplete", () => {
    NProgress.done();
  });
*/
  return (
    <AuthContextProvider>
     <CacheProvider value={emotionCache}>
      <Head>
      <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/nprogress/0.2.0/nprogress.min.css"
        integrity="sha512-42kB9yDlYiCEfx2xVwq0q7hT4uf26FUgSIZBK8uiaEnTdShXjwr8Ip1V4xGJMg3mHkUt9nNuTDxunHF0/EgxLQ=="
        crossOrigin="anonymous"
        referrerPolicy="no-referrer"
      />
      </Head>
      <ThemeProvider theme={theme}>  
       <Provider store={store}>
        <PageLayout>
          <ChakraProvider>
          <CssBaseline />  
          <Component {...pageProps} />
          </ChakraProvider>  
        </PageLayout>
       </Provider>
      </ThemeProvider>
     </CacheProvider> 
    </AuthContextProvider>  

  )
}

export default MyApp


<main className='relative w-full h-full md:w-10/12 sm:flex lg:w-9/12 md:space-x-2 max-w-screen-2xl mx-auto'>

      <div className='relative w-full md:w-3/4 my-5 sm:flex shadow-lg bg-white p-3'>

       <div className='relative w-full md:w-2/4'>
        <div className='w-11/12 mx-auto aspect-square border-gray-400 md:space-x-2 border-2'>
          {data.image &&
            <Image src={data.image} height={250} width={250} objectFit='contain' />
          }
        </div>
       </div>

       <div className='relative w-full px-3 md:w-2/4 p-3'>
        <h2 className='font-bold text-sm md:text-lg my-3'>{data.title}</h2>

        <p className='mt-4 text-xs md:text-sm text-blue-800'>Merchant</p>

        <p className='mt-4 text-xs md:text-sm'>You can also animate the skeleton component.</p>

        <div className='flex'>

          {Array(rating)
          .fill()
          .map((_,i) => (
              <StarIcon key={i} className='h-5 text-yellow-500' />
          ))}

        </div>

        <div className='w-full h-11 border-gray-400 border-t-2 border-b-2 p-1'>
         <p className='font-semibold text-base md:text-lg'>In Stock</p> 
        </div>

       </div>
        
      </div>  
      
      {/*<div className='relative w-full sm:w-1/4 md:w-1/4 my-5 flex flex-col shadow-md bg-white p-3'>
       <h3 className='font-semibold text-base md:text-lg'>{data.price}</h3> 
      </div>*/}
      
     </main>